# JMH version: 1.33
# VM version: JDK 14.0.2, Java HotSpot(TM) 64-Bit Server VM, 14.0.2+12-46
# VM invoker: C:\Program Files\Java\jdk-14.0.2\bin\java.exe
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC -Xmx16G -Xms16G -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\lib\idea_rt.jar=49369:C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 2 iterations, 1 s each
# Measurement: 2 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: eu.happycoders.biasedlocking.BiasedLockingVectorBenchmark.test

# Run progress: 0,00% complete, ETA 00:00:20
# Fork: 1 of 5
# Warmup Iteration   1: 0,079 ±(99.9%) 0,008 s/op
# Warmup Iteration   2: 0,071 ±(99.9%) 0,003 s/op
Iteration   1: 0,073 ±(99.9%) 0,005 s/op
                 test·p0.00:   0,069 s/op
                 test·p0.50:   0,073 s/op
                 test·p0.90:   0,080 s/op
                 test·p0.95:   0,083 s/op
                 test·p0.99:   0,083 s/op
                 test·p0.999:  0,083 s/op
                 test·p0.9999: 0,083 s/op
                 test·p1.00:   0,083 s/op

Iteration   2: 0,071 ±(99.9%) 0,005 s/op
                 test·p0.00:   0,068 s/op
                 test·p0.50:   0,070 s/op
                 test·p0.90:   0,080 s/op
                 test·p0.95:   0,083 s/op
                 test·p0.99:   0,083 s/op
                 test·p0.999:  0,083 s/op
                 test·p0.9999: 0,083 s/op
                 test·p1.00:   0,083 s/op


# Run progress: 20,00% complete, ETA 00:00:21
# Fork: 2 of 5
# Warmup Iteration   1: 0,084 ±(99.9%) 0,027 s/op
# Warmup Iteration   2: 0,072 ±(99.9%) 0,007 s/op
Iteration   1: 0,070 ±(99.9%) 0,002 s/op
                 test·p0.00:   0,068 s/op
                 test·p0.50:   0,069 s/op
                 test·p0.90:   0,074 s/op
                 test·p0.95:   0,075 s/op
                 test·p0.99:   0,075 s/op
                 test·p0.999:  0,075 s/op
                 test·p0.9999: 0,075 s/op
                 test·p1.00:   0,075 s/op

Iteration   2: 0,070 ±(99.9%) 0,002 s/op
                 test·p0.00:   0,068 s/op
                 test·p0.50:   0,070 s/op
                 test·p0.90:   0,072 s/op
                 test·p0.95:   0,073 s/op
                 test·p0.99:   0,073 s/op
                 test·p0.999:  0,073 s/op
                 test·p0.9999: 0,073 s/op
                 test·p1.00:   0,073 s/op


# Run progress: 40,00% complete, ETA 00:00:16
# Fork: 3 of 5
# Warmup Iteration   1: 0,074 ±(99.9%) 0,009 s/op
# Warmup Iteration   2: 0,071 ±(99.9%) 0,004 s/op
Iteration   1: 0,069 ±(99.9%) 0,001 s/op
                 test·p0.00:   0,067 s/op
                 test·p0.50:   0,069 s/op
                 test·p0.90:   0,070 s/op
                 test·p0.95:   0,071 s/op
                 test·p0.99:   0,071 s/op
                 test·p0.999:  0,071 s/op
                 test·p0.9999: 0,071 s/op
                 test·p1.00:   0,071 s/op

Iteration   2: 0,073 ±(99.9%) 0,004 s/op
                 test·p0.00:   0,068 s/op
                 test·p0.50:   0,072 s/op
                 test·p0.90:   0,080 s/op
                 test·p0.95:   0,084 s/op
                 test·p0.99:   0,084 s/op
                 test·p0.999:  0,084 s/op
                 test·p0.9999: 0,084 s/op
                 test·p1.00:   0,084 s/op


# Run progress: 60,00% complete, ETA 00:00:10
# Fork: 4 of 5
# Warmup Iteration   1: 0,085 ±(99.9%) 0,025 s/op
# Warmup Iteration   2: 0,070 ±(99.9%) 0,004 s/op
Iteration   1: 0,070 ±(99.9%) 0,002 s/op
                 test·p0.00:   0,068 s/op
                 test·p0.50:   0,070 s/op
                 test·p0.90:   0,072 s/op
                 test·p0.95:   0,073 s/op
                 test·p0.99:   0,073 s/op
                 test·p0.999:  0,073 s/op
                 test·p0.9999: 0,073 s/op
                 test·p1.00:   0,073 s/op

Iteration   2: 0,070 ±(99.9%) 0,003 s/op
                 test·p0.00:   0,067 s/op
                 test·p0.50:   0,069 s/op
                 test·p0.90:   0,077 s/op
                 test·p0.95:   0,077 s/op
                 test·p0.99:   0,077 s/op
                 test·p0.999:  0,077 s/op
                 test·p0.9999: 0,077 s/op
                 test·p1.00:   0,077 s/op


# Run progress: 80,00% complete, ETA 00:00:05
# Fork: 5 of 5
# Warmup Iteration   1: 0,075 ±(99.9%) 0,014 s/op
# Warmup Iteration   2: 0,070 ±(99.9%) 0,004 s/op
Iteration   1: 0,070 ±(99.9%) 0,006 s/op
                 test·p0.00:   0,068 s/op
                 test·p0.50:   0,068 s/op
                 test·p0.90:   0,079 s/op
                 test·p0.95:   0,091 s/op
                 test·p0.99:   0,091 s/op
                 test·p0.999:  0,091 s/op
                 test·p0.9999: 0,091 s/op
                 test·p1.00:   0,091 s/op

Iteration   2: 0,070 ±(99.9%) 0,005 s/op
                 test·p0.00:   0,067 s/op
                 test·p0.50:   0,068 s/op
                 test·p0.90:   0,079 s/op
                 test·p0.95:   0,083 s/op
                 test·p0.99:   0,083 s/op
                 test·p0.999:  0,083 s/op
                 test·p0.9999: 0,083 s/op
                 test·p1.00:   0,083 s/op



Result "eu.happycoders.biasedlocking.BiasedLockingVectorBenchmark.test":
  N = 148
  mean =      0,071 ±(99.9%) 0,001 s/op

  Histogram, s/op:
    [0,060, 0,063) = 0 
    [0,063, 0,065) = 0 
    [0,065, 0,068) = 3 
    [0,068, 0,070) = 88 
    [0,070, 0,073) = 30 
    [0,073, 0,075) = 12 
    [0,075, 0,078) = 9 
    [0,078, 0,080) = 1 
    [0,080, 0,082) = 0 
    [0,082, 0,085) = 4 
    [0,085, 0,088) = 0 
    [0,088, 0,090) = 0 
    [0,090, 0,093) = 1 
    [0,093, 0,095) = 0 
    [0,095, 0,098) = 0 
    [0,098, 0,100) = 0 

  Percentiles, s/op:
      p(0,0000) =      0,067 s/op
     p(50,0000) =      0,069 s/op
     p(90,0000) =      0,075 s/op
     p(95,0000) =      0,077 s/op
     p(99,0000) =      0,088 s/op
     p(99,9000) =      0,091 s/op
     p(99,9900) =      0,091 s/op
     p(99,9990) =      0,091 s/op
     p(99,9999) =      0,091 s/op
    p(100,0000) =      0,091 s/op


# Run complete. Total time: 00:00:27

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                         Mode  Cnt  Score   Error  Units
BiasedLockingVectorBenchmark.test               sample  148  0,071 ± 0,001   s/op
BiasedLockingVectorBenchmark.test:test·p0.00    sample       0,067           s/op
BiasedLockingVectorBenchmark.test:test·p0.50    sample       0,069           s/op
BiasedLockingVectorBenchmark.test:test·p0.90    sample       0,075           s/op
BiasedLockingVectorBenchmark.test:test·p0.95    sample       0,077           s/op
BiasedLockingVectorBenchmark.test:test·p0.99    sample       0,088           s/op
BiasedLockingVectorBenchmark.test:test·p0.999   sample       0,091           s/op
BiasedLockingVectorBenchmark.test:test·p0.9999  sample       0,091           s/op
BiasedLockingVectorBenchmark.test:test·p1.00    sample       0,091           s/op
